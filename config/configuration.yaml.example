homeassistant:
  # Omitted values in this section will be auto detected using freegeoip.io

  # Location required to calculate the time the sun rises and sets.  
  # Coordinates are also used for location for weather related components.
  # Google Maps can be used to determine more precise GPS coordinates.
  latitude: 32.87336
  longitude: 117.22743

  # C for Celcius, F for Fahrenheit
  temperature_unit: C

  # Pick yours from here:
  # http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Los_Angeles

  # Name of the location where Home Assistant is running
  name: Home

http:
  api_password: mypass
  # Set to 1 to enable development mode
  # development: 1

light:
#  platform: hue

wink:
  # Get your token at https://winkbearertoken.appspot.com
  access_token: 'YOUR_TOKEN'

device_tracker:
  # The following types are available: ddwrt, netgear, tomato, luci,
  # and nmap_tracker
  platform: netgear
  host: 192.168.1.1
  username: admin
  password: PASSWORD
  # http_id is needed for Tomato routers only
  # http_id: ABCDEFGHH
  # For nmap_tracker, only the IP addresses to scan are needed:
  # hosts: 192.168.1.1/24 # netmask prefix notation or
  # hosts: 192.168.1.1-255 # address range

chromecast:

switch:
  platform: wemo

thermostat:
  platform: nest
  # Required: username and password that are used to login to the Nest thermostat.
  username: myemail@mydomain.com
  password: mypassword

downloader:
  download_dir: downloads

notify:
  platform: pushbullet
  api_key: ABCDEFGHJKLMNOPQRSTUVXYZ

device_sun_light_trigger:
  # Optional: specify a specific light/group of lights that has to be turned on
  light_group: group.living_room
  # Optional: specify which light profile to use when turning lights on
  light_profile: relax
  # Optional: disable lights being turned off when everybody leaves the house
  # disable_turn_off: 1

# A comma separated list of states that have to be tracked as a single group
# Grouped states should share the same type of states (ON/OFF or HOME/NOT_HOME)
# You can also have groups within groups.
group:
  Home:
    - group.living_room
    - group.kitchen
  living_room:
    - light.Bowl
    - light.Ceiling
    - light.TV_back_light
  kitchen:
    - light.fan_bulb_1
    - light.fan_bulb_2
  children:
   - device_tracker.child_1
   - device_tracker.child_2

process:
  # items are which processes to look for: <entity_id>: <search string within ps>
  xbmc: XBMC.App

example:

simple_alarm:
  # Which light/light group has to flash when a known device comes home
  known_light: light.Bowl
  # Which light/light group has to flash red when light turns on while no one home
  unknown_light: group.living_room

browser:

keyboard:

automation:
- alias: 'Rule 1 Light on in the evening'
  trigger:
    - platform: sun
      event: sunset
      offset: "-01:00:00"
    - platform: state
      entity_id: group.all_devices
      state: home
  condition:
    - platform: state
      entity_id: group.all_devices
      state: home
    - platform: time
      after: "16:00:00"
      before: "23:00:00"
  action:
    service: homeassistant.turn_on
    entity_id: group.living_room

- alias: 'Rule 2 - Away Mode'

  trigger:
   - platform: state
     entity_id: group.all_devices
     state: 'not_home'

  condition: use_trigger_values
  action:
     service: light.turn_off
     entity_id: group.all_lights

# Sensors need to be added into the configuration.yaml as sensor:, sensor 2:, sensor 3:, etc. 
# Each sensor label should be unique or your sensors might not load correctly.

sensor:
  platform: systemmonitor
  resources:
    - type: 'disk_use_percent'
      arg: '/'
    - type: 'disk_use_percent'
      arg: '/home'
    - type: 'disk_use'
      arg: '/home'
    - type: 'disk_free'
      arg: '/'
    - type: 'memory_use_percent'
    - type: 'memory_use'
    - type: 'memory_free'
    - type: 'processor_use'
    - type: 'process'
      arg: 'octave-cli'

sensor 2:
  platform: forecast
  api_key: <register on Forecast.io for your PRIVATE API>
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone

script:
  # Turns on the bedroom lights and then the living room lights 1 minute later
  wakeup:
    alias: Wake Up
    sequence:
      # alias is optional
      - alias: Bedroom lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.bedroom
      - delay:
          # supports seconds, milliseconds, minutes, hours, etc.
          minutes: 1
      - alias: Living room lights on
        execute_service: light.turn_on
        service_data:
          entity_id: group.living_room

scene:
  - name: Romantic
    entities:
      light.tv_back_light: on
      light.ceiling:
        state: on
        xy_color: [0.33, 0.66]
        brightness: 200
